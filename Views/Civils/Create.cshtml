@model AvengersUnityIdentity.Models.Civil

@{
    ViewBag.Title = "Create";
}
    <div class="jumbotron background">
        <h2>Ajouter un civil</h2>


        @using (Html.BeginForm())
        {
            if (Request.IsAuthenticated)
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.CivilID, "Email de l'utilisateur", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CivilID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CivilID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Prenom, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Prenom, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Prenom, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Civilite, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.Civilite, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Civilite, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Adresse, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Adresse, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Adresse, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PaysID, "Pays", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("PaysID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PaysID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Date_de_naissance, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Date_de_naissance, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Date_de_naissance, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Créer" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="jumbotron text-center">
                    <h2>Vous devez être connecté pour continuer</h2>
                    <p>@Html.ActionLink("Se connecter", "Login", "Account")</p>

                </div>
            }
        }

        <div>
            @Html.ActionLink("Retour", "Index")
        </div>

    </div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
